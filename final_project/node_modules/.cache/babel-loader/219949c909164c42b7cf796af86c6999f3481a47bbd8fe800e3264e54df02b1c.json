{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport Icon from '../../icon/internal';\nimport Portal from '../../internal/components/portal';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { usePortalModeClasses } from '../../internal/hooks/use-portal-mode-classes';\nimport InternalLiveRegion from '../../live-region/internal';\nimport Arrow from '../../popover/arrow';\nimport PopoverBody from '../../popover/body';\nimport PopoverContainer from '../../popover/container';\nimport { useClickAway } from './click-away';\nimport { TableTdElement } from './td-element';\nimport styles from './styles.css.js';\nexport function DisabledInlineEditor(_a) {\n  var _b;\n  var {\n      item,\n      column,\n      ariaLabels,\n      isEditing,\n      onEditStart,\n      onEditEnd,\n      editDisabledReason\n    } = _a,\n    rest = __rest(_a, [\"item\", \"column\", \"ariaLabels\", \"isEditing\", \"onEditStart\", \"onEditEnd\", \"editDisabledReason\"]);\n  const clickAwayRef = useClickAway(() => {\n    if (isEditing) {\n      onEditEnd(true);\n    }\n  });\n  const [hasHover, setHasHover] = useState(false);\n  const [hasFocus, setHasFocus] = useState(false);\n  // When a cell is both expandable and editable the icon is always shown.\n  const showIcon = hasHover || hasFocus || isEditing;\n  const iconRef = useRef(null);\n  const buttonRef = useRef(null);\n  const portalRef = useRef(null);\n  function handleEscape(event) {\n    if (event.key === 'Escape') {\n      onEditEnd(true);\n    }\n  }\n  const onClick = () => {\n    var _a;\n    onEditStart();\n    (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  const {\n    targetProps,\n    descriptionEl\n  } = useHiddenDescription(editDisabledReason);\n  const portalClasses = usePortalModeClasses(portalRef);\n  const {\n    tabIndex\n  } = useSingleTabStopNavigation(buttonRef);\n  return React.createElement(TableTdElement, Object.assign({}, rest, {\n    nativeAttributes: {\n      'data-inline-editing-active': isEditing.toString()\n    },\n    isEditing: isEditing,\n    isEditingDisabled: true,\n    onClick: !isEditing ? onClick : undefined,\n    onMouseEnter: () => setHasHover(true),\n    onMouseLeave: () => setHasHover(false),\n    ref: clickAwayRef\n  }), column.cell(item), React.createElement(\"div\", {\n    className: styles['body-cell-editor-wrapper']\n  }, React.createElement(\"button\", Object.assign({\n    ref: buttonRef,\n    tabIndex: tabIndex,\n    className: clsx(styles['body-cell-editor'], styles['body-cell-editor-disabled']),\n    \"aria-label\": (_b = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.activateEditLabel) === null || _b === void 0 ? void 0 : _b.call(ariaLabels, column, item),\n    \"aria-haspopup\": \"dialog\",\n    \"aria-disabled\": \"true\",\n    onFocus: () => setHasFocus(true),\n    onBlur: () => setHasFocus(false),\n    onKeyDown: handleEscape\n  }, targetProps), showIcon && React.createElement(Icon, {\n    name: \"lock-private\",\n    variant: \"normal\",\n    __internalRootRef: iconRef\n  }), descriptionEl)), isEditing && React.createElement(\"span\", {\n    ref: portalRef\n  }, React.createElement(Portal, null, React.createElement(\"span\", {\n    className: portalClasses\n  }, React.createElement(PopoverContainer, {\n    size: \"medium\",\n    fixedWidth: false,\n    position: \"top\",\n    trackRef: iconRef,\n    arrow: position => React.createElement(Arrow, {\n      position: position\n    }),\n    renderWithPortal: true,\n    zIndex: 2000\n  }, React.createElement(PopoverBody, {\n    dismissButton: false,\n    dismissAriaLabel: undefined,\n    header: null,\n    onDismiss: () => {},\n    overflowVisible: \"both\"\n  }, React.createElement(InternalLiveRegion, {\n    tagName: \"span\"\n  }, editDisabledReason)))))));\n}","map":{"version":3,"names":["React","useRef","useState","clsx","Icon","Portal","useSingleTabStopNavigation","useHiddenDescription","usePortalModeClasses","InternalLiveRegion","Arrow","PopoverBody","PopoverContainer","useClickAway","TableTdElement","styles","DisabledInlineEditor","_a","item","column","ariaLabels","isEditing","onEditStart","onEditEnd","editDisabledReason","rest","__rest","clickAwayRef","hasHover","setHasHover","hasFocus","setHasFocus","showIcon","iconRef","buttonRef","portalRef","handleEscape","event","key","onClick","current","focus","targetProps","descriptionEl","portalClasses","tabIndex","createElement","Object","assign","nativeAttributes","toString","isEditingDisabled","undefined","onMouseEnter","onMouseLeave","ref","cell","className","_b","activateEditLabel","call","onFocus","onBlur","onKeyDown","name","variant","__internalRootRef","size","fixedWidth","position","trackRef","arrow","renderWithPortal","zIndex","dismissButton","dismissAriaLabel","header","onDismiss","overflowVisible","tagName"],"sources":["C:\\Users\\nicky\\Documents\\GitHub\\cse167\\final_project\\node_modules\\src\\table\\body-cell\\disabled-inline-editor.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport Icon from '../../icon/internal';\nimport Portal from '../../internal/components/portal';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { usePortalModeClasses } from '../../internal/hooks/use-portal-mode-classes';\nimport InternalLiveRegion from '../../live-region/internal';\nimport Arrow from '../../popover/arrow';\nimport PopoverBody from '../../popover/body';\nimport PopoverContainer from '../../popover/container';\nimport { useClickAway } from './click-away';\nimport { TableBodyCellProps } from './index';\nimport { TableTdElement, TableTdElementProps } from './td-element';\n\nimport styles from './styles.css.js';\n\ninterface DisabledInlineEditorProps<ItemType> extends TableBodyCellProps<ItemType> {\n  editDisabledReason: string;\n}\n\nexport function DisabledInlineEditor<ItemType>({\n  item,\n  column,\n  ariaLabels,\n  isEditing,\n  onEditStart,\n  onEditEnd,\n  editDisabledReason,\n  ...rest\n}: DisabledInlineEditorProps<ItemType>) {\n  const clickAwayRef = useClickAway(() => {\n    if (isEditing) {\n      onEditEnd(true);\n    }\n  });\n\n  const [hasHover, setHasHover] = useState(false);\n  const [hasFocus, setHasFocus] = useState(false);\n  // When a cell is both expandable and editable the icon is always shown.\n  const showIcon = hasHover || hasFocus || isEditing;\n\n  const iconRef = useRef(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const portalRef = useRef<HTMLSpanElement>(null);\n\n  function handleEscape(event: React.KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      onEditEnd(true);\n    }\n  }\n\n  const onClick = () => {\n    onEditStart();\n    buttonRef.current?.focus();\n  };\n\n  const { targetProps, descriptionEl } = useHiddenDescription(editDisabledReason);\n  const portalClasses = usePortalModeClasses(portalRef);\n\n  const { tabIndex } = useSingleTabStopNavigation(buttonRef);\n\n  return (\n    <TableTdElement\n      {...rest}\n      nativeAttributes={\n        { 'data-inline-editing-active': isEditing.toString() } as TableTdElementProps['nativeAttributes']\n      }\n      isEditing={isEditing}\n      isEditingDisabled={true}\n      onClick={!isEditing ? onClick : undefined}\n      onMouseEnter={() => setHasHover(true)}\n      onMouseLeave={() => setHasHover(false)}\n      ref={clickAwayRef}\n    >\n      {column.cell(item)}\n\n      <div className={styles['body-cell-editor-wrapper']}>\n        <button\n          ref={buttonRef}\n          tabIndex={tabIndex}\n          className={clsx(styles['body-cell-editor'], styles['body-cell-editor-disabled'])}\n          aria-label={ariaLabels?.activateEditLabel?.(column, item)}\n          aria-haspopup=\"dialog\"\n          aria-disabled=\"true\"\n          onFocus={() => setHasFocus(true)}\n          onBlur={() => setHasFocus(false)}\n          onKeyDown={handleEscape}\n          {...targetProps}\n        >\n          {showIcon && <Icon name=\"lock-private\" variant=\"normal\" __internalRootRef={iconRef} />}\n          {descriptionEl}\n        </button>\n      </div>\n\n      {isEditing && (\n        <span ref={portalRef}>\n          <Portal>\n            <span className={portalClasses}>\n              <PopoverContainer\n                size=\"medium\"\n                fixedWidth={false}\n                position=\"top\"\n                trackRef={iconRef}\n                arrow={position => <Arrow position={position} />}\n                renderWithPortal={true}\n                zIndex={2000}\n              >\n                <PopoverBody\n                  dismissButton={false}\n                  dismissAriaLabel={undefined}\n                  header={null}\n                  onDismiss={() => {}}\n                  overflowVisible=\"both\"\n                >\n                  <InternalLiveRegion tagName=\"span\">{editDisabledReason}</InternalLiveRegion>\n                </PopoverBody>\n              </PopoverContainer>\n            </span>\n          </Portal>\n        </span>\n      )}\n    </TableTdElement>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}