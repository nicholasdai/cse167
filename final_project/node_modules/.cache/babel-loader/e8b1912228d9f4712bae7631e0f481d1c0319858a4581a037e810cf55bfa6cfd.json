{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef, useState } from 'react';\nexport function createUseDiscoveredContent(componentName, controller) {\n  return function useDiscoveredContent({\n    type,\n    header,\n    children\n  }) {\n    const headerRef = useRef(null);\n    const contentRef = useRef(null);\n    const replacementHeaderRef = useRef(null);\n    const replacementContentRef = useRef(null);\n    const [initialHidden, setInitialHidden] = useState(() => controller.initialCheck({\n      type,\n      header,\n      content: children\n    }));\n    const [headerReplacementType, setFoundHeaderReplacement] = useState('original');\n    const [contentReplacementType, setFoundContentReplacement] = useState('original');\n    const mountedProvider = useRef();\n    useEffect(() => {\n      const context = {\n        type,\n        headerRef,\n        contentRef\n      };\n      setInitialHidden(false);\n      return controller.onContentRegistered(provider => {\n        let mounted = true;\n        function checkMounted(methodName) {\n          if (!mounted) {\n            console.warn(`[AwsUi] [Runtime ${componentName} content] \\`${methodName}\\` called after component unmounted`);\n            return false;\n          }\n          return true;\n        }\n        mountedProvider.current = provider.runReplacer(context, {\n          hideHeader() {\n            if (checkMounted('hideHeader')) {\n              setFoundHeaderReplacement('remove');\n            }\n          },\n          restoreHeader() {\n            if (checkMounted('restoreHeader')) {\n              setFoundHeaderReplacement('original');\n            }\n          },\n          replaceHeader(replacer) {\n            if (checkMounted('replaceHeader')) {\n              replacer(replacementHeaderRef.current);\n              setFoundHeaderReplacement('replaced');\n            }\n          },\n          hideContent() {\n            if (checkMounted('hideContent')) {\n              setFoundContentReplacement('remove');\n            }\n          },\n          restoreContent() {\n            if (checkMounted('restoreContent')) {\n              setFoundContentReplacement('original');\n            }\n          },\n          replaceContent(replacer) {\n            if (checkMounted('replaceContent')) {\n              replacer(replacementContentRef.current);\n              setFoundContentReplacement('replaced');\n            }\n          }\n        });\n        return () => {\n          var _a;\n          (_a = mountedProvider.current) === null || _a === void 0 ? void 0 : _a.unmount({\n            replacementHeaderContainer: replacementHeaderRef.current,\n            replacementContentContainer: replacementContentRef.current\n          });\n          mounted = false;\n        };\n      });\n    }, [type]);\n    useEffect(() => {\n      var _a;\n      (_a = mountedProvider.current) === null || _a === void 0 ? void 0 : _a.update();\n    }, [type, header, children]);\n    return {\n      initialHidden,\n      headerReplacementType,\n      contentReplacementType,\n      headerRef: headerRef,\n      replacementHeaderRef: replacementHeaderRef,\n      contentRef: contentRef,\n      replacementContentRef: replacementContentRef\n    };\n  };\n}","map":{"version":3,"names":["useEffect","useRef","useState","createUseDiscoveredContent","componentName","controller","useDiscoveredContent","type","header","children","headerRef","contentRef","replacementHeaderRef","replacementContentRef","initialHidden","setInitialHidden","initialCheck","content","headerReplacementType","setFoundHeaderReplacement","contentReplacementType","setFoundContentReplacement","mountedProvider","context","onContentRegistered","provider","mounted","checkMounted","methodName","console","warn","current","runReplacer","hideHeader","restoreHeader","replaceHeader","replacer","hideContent","restoreContent","replaceContent","_a","unmount","replacementHeaderContainer","replacementContentContainer","update"],"sources":["C:\\Users\\nicky\\Documents\\GitHub\\cse167\\final_project\\node_modules\\src\\internal\\plugins\\helpers\\use-discovered-content.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ReactNode, useEffect, useRef, useState } from 'react';\n\nimport {\n  AlertFlashContentApiInternal,\n  AlertFlashContentResult,\n  ReplacementType,\n} from '../controllers/alert-flash-content';\n\nexport function createUseDiscoveredContent(componentName: string, controller: AlertFlashContentApiInternal) {\n  return function useDiscoveredContent({\n    type,\n    header,\n    children,\n  }: {\n    type: string;\n    header: ReactNode;\n    children: ReactNode;\n  }) {\n    const headerRef = useRef<HTMLDivElement>(null);\n    const contentRef = useRef<HTMLDivElement>(null);\n    const replacementHeaderRef = useRef<HTMLDivElement>(null);\n    const replacementContentRef = useRef<HTMLDivElement>(null);\n    const [initialHidden, setInitialHidden] = useState(() =>\n      controller.initialCheck({\n        type,\n        header,\n        content: children,\n      })\n    );\n    const [headerReplacementType, setFoundHeaderReplacement] = useState<ReplacementType>('original');\n    const [contentReplacementType, setFoundContentReplacement] = useState<ReplacementType>('original');\n    const mountedProvider = useRef<AlertFlashContentResult | undefined>();\n\n    useEffect(() => {\n      const context = { type, headerRef, contentRef };\n\n      setInitialHidden(false);\n\n      return controller.onContentRegistered(provider => {\n        let mounted = true;\n\n        function checkMounted(methodName: string) {\n          if (!mounted) {\n            console.warn(\n              `[AwsUi] [Runtime ${componentName} content] \\`${methodName}\\` called after component unmounted`\n            );\n            return false;\n          }\n          return true;\n        }\n\n        mountedProvider.current = provider.runReplacer(context, {\n          hideHeader() {\n            if (checkMounted('hideHeader')) {\n              setFoundHeaderReplacement('remove');\n            }\n          },\n          restoreHeader() {\n            if (checkMounted('restoreHeader')) {\n              setFoundHeaderReplacement('original');\n            }\n          },\n          replaceHeader(replacer: (container: HTMLElement) => void) {\n            if (checkMounted('replaceHeader')) {\n              replacer(replacementHeaderRef.current!);\n              setFoundHeaderReplacement('replaced');\n            }\n          },\n          hideContent() {\n            if (checkMounted('hideContent')) {\n              setFoundContentReplacement('remove');\n            }\n          },\n          restoreContent() {\n            if (checkMounted('restoreContent')) {\n              setFoundContentReplacement('original');\n            }\n          },\n          replaceContent(replacer: (container: HTMLElement) => void) {\n            if (checkMounted('replaceContent')) {\n              replacer(replacementContentRef.current!);\n              setFoundContentReplacement('replaced');\n            }\n          },\n        });\n\n        return () => {\n          mountedProvider.current?.unmount({\n            replacementHeaderContainer: replacementHeaderRef.current!,\n            replacementContentContainer: replacementContentRef.current!,\n          });\n          mounted = false;\n        };\n      });\n    }, [type]);\n\n    useEffect(() => {\n      mountedProvider.current?.update();\n    }, [type, header, children]);\n\n    return {\n      initialHidden,\n      headerReplacementType,\n      contentReplacementType,\n      headerRef: headerRef as React.Ref<HTMLDivElement>,\n      replacementHeaderRef: replacementHeaderRef as React.Ref<HTMLDivElement>,\n      contentRef: contentRef as React.Ref<HTMLDivElement>,\n      replacementContentRef: replacementContentRef as React.Ref<HTMLDivElement>,\n    };\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}