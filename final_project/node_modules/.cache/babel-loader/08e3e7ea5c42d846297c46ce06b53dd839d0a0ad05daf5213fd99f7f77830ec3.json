{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useState } from 'react';\nimport { findUpUntil } from '../../dom';\nimport { createSingletonHandler } from '../singleton-handler';\nimport { useStableCallback } from '../stable-callback';\nimport { isDevelopment } from '../is-development';\nimport { warnOnce } from '../logging';\nimport { awsuiVisualRefreshFlag, getGlobal } from '../global-flags';\nfunction safeMatchMedia(element, query) {\n  var _a, _b, _c, _d;\n  try {\n    const targetWindow = (_b = (_a = element.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) !== null && _b !== void 0 ? _b : window;\n    return (_d = (_c = targetWindow.matchMedia) === null || _c === void 0 ? void 0 : _c.call(targetWindow, query).matches) !== null && _d !== void 0 ? _d : false;\n  } catch (error) {\n    console.warn(error);\n    return false;\n  }\n}\nexport function isMotionDisabled(element) {\n  return !!findUpUntil(element, node => node.classList.contains('awsui-motion-disabled')) || safeMatchMedia(element, '(prefers-reduced-motion: reduce)');\n}\n// Note that this hook doesn't take into consideration @media print (unlike the dark mode CSS),\n// due to challenges with cross-browser implementations of media/print state change listeners.\n// This means that components using this hook will render in dark mode even when printing.\nexport function useCurrentMode(elementRef) {\n  const [value, setValue] = useState('light');\n  useMutationObserver(elementRef, node => {\n    const darkModeParent = findUpUntil(node, node => node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode'));\n    const newValue = darkModeParent ? 'dark' : 'light';\n    // refer to the comment below in `useReducedMotion`\n    if (newValue !== value) {\n      setValue(newValue);\n    }\n  });\n  return value;\n}\nexport function useDensityMode(elementRef) {\n  const [value, setValue] = useState('comfortable');\n  useMutationObserver(elementRef, node => {\n    const compactModeParent = findUpUntil(node, node => node.classList.contains('awsui-polaris-compact-mode') || node.classList.contains('awsui-compact-mode'));\n    const newValue = compactModeParent ? 'compact' : 'comfortable';\n    // refer to the comment below in `useReducedMotion`\n    if (newValue !== value) {\n      setValue(newValue);\n    }\n  });\n  return value;\n}\nexport function useReducedMotion(elementRef) {\n  const [value, setValue] = useState(false);\n  useMutationObserver(elementRef, node => {\n    const newValue = isMotionDisabled(node);\n    /**\n     * React has a behavior that triggers a re-render even if the same value is provided in the setState, while it does not\n     * commit any changes to the DOM (commit phase) the function rerenders. This causes a false react act warnings in testing\n     * and any component using the Transition component which in return uses this hook will possibly have false react warnings.\n     *\n     * To fix this, we manually stop setting the state ourselves if we see the same value.\n     * References:  https://www.reddit.com/r/reactjs/comments/1ej505e/why_does_it_rerender_even_when_state_is_same/#:~:text=If%20the%20new%20value%20you,shouldn't%20affect%20your%20code\n     */\n    if (newValue !== value) {\n      setValue(newValue);\n    }\n  });\n  return value;\n}\nconst useMutationSingleton = createSingletonHandler(handler => {\n  const observer = new MutationObserver(() => handler());\n  observer.observe(document.body, {\n    attributes: true,\n    subtree: true\n  });\n  return () => observer.disconnect();\n});\nfunction useMutationObserver(elementRef, onChange) {\n  const handler = useStableCallback(() => {\n    if (elementRef.current) {\n      onChange(elementRef.current);\n    }\n  });\n  useMutationSingleton(handler);\n  useEffect(() => {\n    handler();\n  }, [handler]);\n}\n// We expect VR is to be set only once and before the application is rendered.\nlet visualRefreshState = undefined;\n// for testing\nexport function clearVisualRefreshState() {\n  visualRefreshState = undefined;\n}\nfunction detectVisualRefreshClassName() {\n  return typeof document !== 'undefined' && !!document.querySelector('.awsui-visual-refresh');\n}\nfunction detectVisualRefreshFlag() {\n  var _a, _b;\n  const global = getGlobal();\n  return (_b = (_a = global === null || global === void 0 ? void 0 : global[awsuiVisualRefreshFlag]) === null || _a === void 0 ? void 0 : _a.call(global)) !== null && _b !== void 0 ? _b : false;\n}\nexport function useRuntimeVisualRefresh() {\n  if (visualRefreshState === undefined) {\n    visualRefreshState = detectVisualRefreshClassName();\n    if (!visualRefreshState) {\n      if (detectVisualRefreshFlag()) {\n        visualRefreshState = true;\n        if (typeof document !== 'undefined') {\n          document.body.classList.add('awsui-visual-refresh');\n        }\n      }\n    }\n  }\n  if (isDevelopment) {\n    const newVisualRefreshState = detectVisualRefreshClassName() || detectVisualRefreshFlag();\n    if (newVisualRefreshState !== visualRefreshState) {\n      warnOnce('Visual Refresh', 'Dynamic visual refresh change detected. This is not supported. ' + 'Make sure `awsui-visual-refresh` is attached to the `<body>` element before initial React render');\n    }\n  }\n  return visualRefreshState;\n}","map":{"version":3,"names":["useEffect","useState","findUpUntil","createSingletonHandler","useStableCallback","isDevelopment","warnOnce","awsuiVisualRefreshFlag","getGlobal","safeMatchMedia","element","query","_a","_b","_c","_d","targetWindow","ownerDocument","defaultView","window","matchMedia","call","matches","error","console","warn","isMotionDisabled","node","classList","contains","useCurrentMode","elementRef","value","setValue","useMutationObserver","darkModeParent","newValue","useDensityMode","compactModeParent","useReducedMotion","useMutationSingleton","handler","observer","MutationObserver","observe","document","body","attributes","subtree","disconnect","onChange","current","visualRefreshState","undefined","clearVisualRefreshState","detectVisualRefreshClassName","querySelector","detectVisualRefreshFlag","global","useRuntimeVisualRefresh","add","newVisualRefreshState"],"sources":["C:/Users/nicky/Documents/GitHub/cse167/final_project/node_modules/@cloudscape-design/component-toolkit/internal/visual-mode/index.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useState } from 'react';\nimport { findUpUntil } from '../../dom';\nimport { createSingletonHandler } from '../singleton-handler';\nimport { useStableCallback } from '../stable-callback';\nimport { isDevelopment } from '../is-development';\nimport { warnOnce } from '../logging';\nimport { awsuiVisualRefreshFlag, getGlobal } from '../global-flags';\nfunction safeMatchMedia(element, query) {\n    var _a, _b, _c, _d;\n    try {\n        const targetWindow = (_b = (_a = element.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) !== null && _b !== void 0 ? _b : window;\n        return (_d = (_c = targetWindow.matchMedia) === null || _c === void 0 ? void 0 : _c.call(targetWindow, query).matches) !== null && _d !== void 0 ? _d : false;\n    }\n    catch (error) {\n        console.warn(error);\n        return false;\n    }\n}\nexport function isMotionDisabled(element) {\n    return (!!findUpUntil(element, node => node.classList.contains('awsui-motion-disabled')) ||\n        safeMatchMedia(element, '(prefers-reduced-motion: reduce)'));\n}\n// Note that this hook doesn't take into consideration @media print (unlike the dark mode CSS),\n// due to challenges with cross-browser implementations of media/print state change listeners.\n// This means that components using this hook will render in dark mode even when printing.\nexport function useCurrentMode(elementRef) {\n    const [value, setValue] = useState('light');\n    useMutationObserver(elementRef, node => {\n        const darkModeParent = findUpUntil(node, node => node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode'));\n        const newValue = darkModeParent ? 'dark' : 'light';\n        // refer to the comment below in `useReducedMotion`\n        if (newValue !== value) {\n            setValue(newValue);\n        }\n    });\n    return value;\n}\nexport function useDensityMode(elementRef) {\n    const [value, setValue] = useState('comfortable');\n    useMutationObserver(elementRef, node => {\n        const compactModeParent = findUpUntil(node, node => node.classList.contains('awsui-polaris-compact-mode') || node.classList.contains('awsui-compact-mode'));\n        const newValue = compactModeParent ? 'compact' : 'comfortable';\n        // refer to the comment below in `useReducedMotion`\n        if (newValue !== value) {\n            setValue(newValue);\n        }\n    });\n    return value;\n}\nexport function useReducedMotion(elementRef) {\n    const [value, setValue] = useState(false);\n    useMutationObserver(elementRef, node => {\n        const newValue = isMotionDisabled(node);\n        /**\n         * React has a behavior that triggers a re-render even if the same value is provided in the setState, while it does not\n         * commit any changes to the DOM (commit phase) the function rerenders. This causes a false react act warnings in testing\n         * and any component using the Transition component which in return uses this hook will possibly have false react warnings.\n         *\n         * To fix this, we manually stop setting the state ourselves if we see the same value.\n         * References:  https://www.reddit.com/r/reactjs/comments/1ej505e/why_does_it_rerender_even_when_state_is_same/#:~:text=If%20the%20new%20value%20you,shouldn't%20affect%20your%20code\n         */\n        if (newValue !== value) {\n            setValue(newValue);\n        }\n    });\n    return value;\n}\nconst useMutationSingleton = createSingletonHandler(handler => {\n    const observer = new MutationObserver(() => handler());\n    observer.observe(document.body, { attributes: true, subtree: true });\n    return () => observer.disconnect();\n});\nfunction useMutationObserver(elementRef, onChange) {\n    const handler = useStableCallback(() => {\n        if (elementRef.current) {\n            onChange(elementRef.current);\n        }\n    });\n    useMutationSingleton(handler);\n    useEffect(() => {\n        handler();\n    }, [handler]);\n}\n// We expect VR is to be set only once and before the application is rendered.\nlet visualRefreshState = undefined;\n// for testing\nexport function clearVisualRefreshState() {\n    visualRefreshState = undefined;\n}\nfunction detectVisualRefreshClassName() {\n    return typeof document !== 'undefined' && !!document.querySelector('.awsui-visual-refresh');\n}\nfunction detectVisualRefreshFlag() {\n    var _a, _b;\n    const global = getGlobal();\n    return (_b = (_a = global === null || global === void 0 ? void 0 : global[awsuiVisualRefreshFlag]) === null || _a === void 0 ? void 0 : _a.call(global)) !== null && _b !== void 0 ? _b : false;\n}\nexport function useRuntimeVisualRefresh() {\n    if (visualRefreshState === undefined) {\n        visualRefreshState = detectVisualRefreshClassName();\n        if (!visualRefreshState) {\n            if (detectVisualRefreshFlag()) {\n                visualRefreshState = true;\n                if (typeof document !== 'undefined') {\n                    document.body.classList.add('awsui-visual-refresh');\n                }\n            }\n        }\n    }\n    if (isDevelopment) {\n        const newVisualRefreshState = detectVisualRefreshClassName() || detectVisualRefreshFlag();\n        if (newVisualRefreshState !== visualRefreshState) {\n            warnOnce('Visual Refresh', 'Dynamic visual refresh change detected. This is not supported. ' +\n                'Make sure `awsui-visual-refresh` is attached to the `<body>` element before initial React render');\n        }\n    }\n    return visualRefreshState;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}