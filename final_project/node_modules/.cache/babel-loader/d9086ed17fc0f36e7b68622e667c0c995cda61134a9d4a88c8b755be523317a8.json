{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useSetGlobalBreadcrumbs } from '../internal/plugins/helpers/use-global-breadcrumbs';\nimport { applyDisplayName } from '../internal/utils/apply-display-name.js';\nimport { InternalBreadcrumbGroup } from './internal';\nimport { BreadcrumbGroupSkeleton } from './skeleton';\nexport default function BreadcrumbGroup(_a) {\n  var {\n      items = []\n    } = _a,\n    props = __rest(_a, [\"items\"]);\n  const registeredGlobally = useSetGlobalBreadcrumbs(Object.assign({\n    items\n  }, props));\n  const baseComponentProps = useBaseComponent('BreadcrumbGroup');\n  if (registeredGlobally) {\n    return React.createElement(BreadcrumbGroupSkeleton, {\n      items: items\n    });\n  }\n  return React.createElement(InternalBreadcrumbGroup, Object.assign({\n    items: items\n  }, props, baseComponentProps, {\n    __injectAnalyticsComponentMetadata: true\n  }));\n}\napplyDisplayName(BreadcrumbGroup, 'BreadcrumbGroup');","map":{"version":3,"names":["React","useBaseComponent","useSetGlobalBreadcrumbs","applyDisplayName","InternalBreadcrumbGroup","BreadcrumbGroupSkeleton","BreadcrumbGroup","_a","items","props","__rest","registeredGlobally","Object","assign","baseComponentProps","createElement","__injectAnalyticsComponentMetadata"],"sources":["C:\\Users\\nicky\\Documents\\GitHub\\cse167\\final_project\\node_modules\\src\\breadcrumb-group\\index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useSetGlobalBreadcrumbs } from '../internal/plugins/helpers/use-global-breadcrumbs';\nimport { applyDisplayName } from '../internal/utils/apply-display-name.js';\nimport { BreadcrumbGroupProps } from './interfaces';\nimport { InternalBreadcrumbGroup } from './internal';\nimport { BreadcrumbGroupSkeleton } from './skeleton';\n\nexport { BreadcrumbGroupProps };\n\nexport default function BreadcrumbGroup<T extends BreadcrumbGroupProps.Item = BreadcrumbGroupProps.Item>({\n  items = [],\n  ...props\n}: BreadcrumbGroupProps<T>) {\n  const registeredGlobally = useSetGlobalBreadcrumbs({ items, ...props });\n  const baseComponentProps = useBaseComponent('BreadcrumbGroup');\n\n  if (registeredGlobally) {\n    return <BreadcrumbGroupSkeleton items={items} />;\n  }\n\n  return (\n    <InternalBreadcrumbGroup\n      items={items}\n      {...props}\n      {...baseComponentProps}\n      __injectAnalyticsComponentMetadata={true}\n    />\n  );\n}\n\napplyDisplayName(BreadcrumbGroup, 'BreadcrumbGroup');\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,uBAAuB,QAAQ,oDAAoD;AAC5F,SAASC,gBAAgB,QAAQ,yCAAyC;AAE1E,SAASC,uBAAuB,QAAQ,YAAY;AACpD,SAASC,uBAAuB,QAAQ,YAAY;AAIpD,eAAc,SAAUC,eAAeA,CAAkEC,EAG/E;MAH+E;MACvGC,KAAK,GAAG;IAAE,IAAAD,EAEc;IADrBE,KAAK,GAAAC,MAAA,CAAAH,EAAA,EAF+F,SAGxG,CADS;EAER,MAAMI,kBAAkB,GAAGT,uBAAuB,CAAAU,MAAA,CAAAC,MAAA;IAAGL;EAAK,GAAKC,KAAK,EAAG;EACvE,MAAMK,kBAAkB,GAAGb,gBAAgB,CAAC,iBAAiB,CAAC;EAE9D,IAAIU,kBAAkB,EAAE;IACtB,OAAOX,KAAA,CAAAe,aAAA,CAACV,uBAAuB;MAACG,KAAK,EAAEA;IAAK,EAAI;;EAGlD,OACER,KAAA,CAAAe,aAAA,CAACX,uBAAuB,EAAAQ,MAAA,CAAAC,MAAA;IACtBL,KAAK,EAAEA;EAAK,GACRC,KAAK,EACLK,kBAAkB;IACtBE,kCAAkC,EAAE;EAAI,GACxC;AAEN;AAEAb,gBAAgB,CAACG,eAAe,EAAE,iBAAiB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}