{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport PropertyFilterInternal from './internal';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nconst PropertyFilter = React.forwardRef((_a, ref) => {\n  var _b;\n  var {\n      filteringProperties,\n      filteringOptions = [],\n      customGroupsText = [],\n      enableTokenGroups = false,\n      disableFreeTextFiltering = false,\n      asyncProperties,\n      expandToViewport,\n      hideOperations = false,\n      tokenLimit,\n      virtualScroll\n    } = _a,\n    rest = __rest(_a, [\"filteringProperties\", \"filteringOptions\", \"customGroupsText\", \"enableTokenGroups\", \"disableFreeTextFiltering\", \"asyncProperties\", \"expandToViewport\", \"hideOperations\", \"tokenLimit\", \"virtualScroll\"]);\n  let hasCustomForms = false;\n  let hasEnumTokens = false;\n  let hasCustomFormatters = false;\n  for (const property of filteringProperties) {\n    for (const operator of (_b = property.operators) !== null && _b !== void 0 ? _b : []) {\n      if (typeof operator === 'object') {\n        hasCustomForms = hasCustomForms || !!operator.form;\n        hasEnumTokens = hasEnumTokens || operator.tokenType === 'enum';\n        hasCustomFormatters = hasCustomFormatters || !!operator.format;\n      }\n    }\n  }\n  const baseComponentProps = useBaseComponent('PropertyFilter', {\n    props: {\n      asyncProperties,\n      disableFreeTextFiltering,\n      enableTokenGroups,\n      expandToViewport,\n      hideOperations,\n      tokenLimit,\n      virtualScroll\n    },\n    metadata: {\n      hasCustomForms,\n      hasEnumTokens,\n      hasCustomFormatters\n    }\n  });\n  const componentAnalyticsMetadata = {\n    name: 'awsui.PropertyFilter',\n    label: `.${analyticsSelectors['search-field']} input`,\n    properties: {\n      disabled: `${!!rest.disabled}`,\n      queryTokensCount: `${rest.query && rest.query.tokens ? rest.query.tokens.length : 0}`\n    }\n  };\n  if (hideOperations && enableTokenGroups) {\n    warnOnce('PropertyFilter', 'Operations cannot be hidden when token groups are enabled.');\n    hideOperations = false;\n  }\n  return React.createElement(PropertyFilterInternal, Object.assign({\n    ref: ref\n  }, baseComponentProps, {\n    filteringProperties: filteringProperties,\n    filteringOptions: filteringOptions,\n    customGroupsText: customGroupsText,\n    enableTokenGroups: enableTokenGroups,\n    disableFreeTextFiltering: disableFreeTextFiltering,\n    asyncProperties: asyncProperties,\n    expandToViewport: expandToViewport,\n    hideOperations: hideOperations,\n    tokenLimit: tokenLimit,\n    virtualScroll: virtualScroll\n  }, getAnalyticsMetadataAttribute({\n    component: componentAnalyticsMetadata\n  }), rest));\n});\napplyDisplayName(PropertyFilter, 'PropertyFilter');\nexport default PropertyFilter;","map":{"version":3,"names":["React","warnOnce","getAnalyticsMetadataAttribute","useBaseComponent","applyDisplayName","PropertyFilterInternal","analyticsSelectors","PropertyFilter","forwardRef","_a","ref","filteringProperties","filteringOptions","customGroupsText","enableTokenGroups","disableFreeTextFiltering","asyncProperties","expandToViewport","hideOperations","tokenLimit","virtualScroll","rest","__rest","hasCustomForms","hasEnumTokens","hasCustomFormatters","property","operator","_b","operators","form","tokenType","format","baseComponentProps","props","metadata","componentAnalyticsMetadata","name","label","properties","disabled","queryTokensCount","query","tokens","length","createElement","Object","assign","component"],"sources":["C:\\Users\\nicky\\Documents\\GitHub\\cse167\\final_project\\node_modules\\src\\property-filter\\index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataPropertyFilterComponent } from './analytics-metadata/interfaces';\nimport { PropertyFilterProps, Ref } from './interfaces';\nimport PropertyFilterInternal from './internal';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\n\nexport { PropertyFilterProps };\n\nconst PropertyFilter = React.forwardRef(\n  (\n    {\n      filteringProperties,\n      filteringOptions = [],\n      customGroupsText = [],\n      enableTokenGroups = false,\n      disableFreeTextFiltering = false,\n      asyncProperties,\n      expandToViewport,\n      hideOperations = false,\n      tokenLimit,\n      virtualScroll,\n      ...rest\n    }: PropertyFilterProps,\n    ref: React.Ref<Ref>\n  ) => {\n    let hasCustomForms = false;\n    let hasEnumTokens = false;\n    let hasCustomFormatters = false;\n    for (const property of filteringProperties) {\n      for (const operator of property.operators ?? []) {\n        if (typeof operator === 'object') {\n          hasCustomForms = hasCustomForms || !!operator.form;\n          hasEnumTokens = hasEnumTokens || operator.tokenType === 'enum';\n          hasCustomFormatters = hasCustomFormatters || !!operator.format;\n        }\n      }\n    }\n\n    const baseComponentProps = useBaseComponent('PropertyFilter', {\n      props: {\n        asyncProperties,\n        disableFreeTextFiltering,\n        enableTokenGroups,\n        expandToViewport,\n        hideOperations,\n        tokenLimit,\n        virtualScroll,\n      },\n      metadata: {\n        hasCustomForms,\n        hasEnumTokens,\n        hasCustomFormatters,\n      },\n    });\n\n    const componentAnalyticsMetadata: GeneratedAnalyticsMetadataPropertyFilterComponent = {\n      name: 'awsui.PropertyFilter',\n      label: `.${analyticsSelectors['search-field']} input`,\n      properties: {\n        disabled: `${!!rest.disabled}`,\n        queryTokensCount: `${rest.query && rest.query.tokens ? rest.query.tokens.length : 0}`,\n      },\n    };\n\n    if (hideOperations && enableTokenGroups) {\n      warnOnce('PropertyFilter', 'Operations cannot be hidden when token groups are enabled.');\n      hideOperations = false;\n    }\n\n    return (\n      <PropertyFilterInternal\n        ref={ref}\n        {...baseComponentProps}\n        filteringProperties={filteringProperties}\n        filteringOptions={filteringOptions}\n        customGroupsText={customGroupsText}\n        enableTokenGroups={enableTokenGroups}\n        disableFreeTextFiltering={disableFreeTextFiltering}\n        asyncProperties={asyncProperties}\n        expandToViewport={expandToViewport}\n        hideOperations={hideOperations}\n        tokenLimit={tokenLimit}\n        virtualScroll={virtualScroll}\n        {...getAnalyticsMetadataAttribute({ component: componentAnalyticsMetadata })}\n        {...rest}\n      />\n    );\n  }\n);\n\napplyDisplayName(PropertyFilter, 'PropertyFilter');\nexport default PropertyFilter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}