{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport { Transition } from 'react-transition-group';\nimport clsx from 'clsx';\nimport { InternalButton } from '../../../button/internal';\nimport PanelResizeHandle from '../../../internal/components/panel-resize-handle';\nimport customCssProps from '../../../internal/generated/custom-css-properties';\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { getLimitedValue } from '../../../split-panel/utils/size-utils';\nimport { TOOLS_DRAWER_ID } from '../../utils/use-drawers';\nimport { getDrawerStyles } from '../compute-layout';\nimport { useResize } from './use-resize';\nimport sharedStyles from '../../resize/styles.css.js';\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\nexport function AppLayoutDrawerImplementation({\n  appLayoutInternals\n}) {\n  var _a, _b, _c;\n  const {\n    activeDrawer,\n    minDrawerSize,\n    activeDrawerSize,\n    maxDrawerSize,\n    ariaLabels,\n    drawers,\n    drawersFocusControl,\n    isMobile,\n    placement,\n    verticalOffsets,\n    drawersOpenQueue,\n    onActiveDrawerChange,\n    onActiveDrawerResize\n  } = appLayoutInternals;\n  const drawerRef = useRef(null);\n  const activeDrawerId = activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.id;\n  const computedAriaLabels = {\n    closeButton: activeDrawer ? (_a = activeDrawer.ariaLabels) === null || _a === void 0 ? void 0 : _a.closeButton : ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.toolsClose,\n    content: activeDrawer ? (_b = activeDrawer.ariaLabels) === null || _b === void 0 ? void 0 : _b.drawerName : ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tools\n  };\n  const {\n    drawerTopOffset,\n    drawerHeight\n  } = getDrawerStyles(verticalOffsets, isMobile, placement);\n  const toolsOnlyMode = drawers.length === 1 && drawers[0].id === TOOLS_DRAWER_ID;\n  const isToolsDrawer = (activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.id) === TOOLS_DRAWER_ID || toolsOnlyMode;\n  const toolsContent = (_c = drawers === null || drawers === void 0 ? void 0 : drawers.find(drawer => drawer.id === TOOLS_DRAWER_ID)) === null || _c === void 0 ? void 0 : _c.content;\n  const resizeProps = useResize({\n    currentWidth: activeDrawerSize,\n    minWidth: minDrawerSize,\n    maxWidth: maxDrawerSize,\n    panelRef: drawerRef,\n    handleRef: drawersFocusControl.refs.slider,\n    onResize: size => onActiveDrawerResize({\n      id: activeDrawerId,\n      size\n    })\n  });\n  // temporary handle a situation when app-layout is old, but this component come as a widget\n  const isLegacyDrawer = drawersOpenQueue === undefined;\n  const size = getLimitedValue(minDrawerSize, activeDrawerSize, maxDrawerSize);\n  const lastOpenedDrawerId = (drawersOpenQueue === null || drawersOpenQueue === void 0 ? void 0 : drawersOpenQueue.length) ? drawersOpenQueue[0] : activeDrawerId;\n  const animationDisabled = (activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.defaultActive) && !drawersOpenQueue.includes(activeDrawer.id);\n  return React.createElement(Transition, {\n    nodeRef: drawerRef,\n    in: !!activeDrawer,\n    appear: true,\n    timeout: 0\n  }, state => {\n    var _a;\n    return React.createElement(\"aside\", {\n      id: activeDrawerId,\n      \"aria-hidden\": !activeDrawer,\n      \"aria-label\": computedAriaLabels.content,\n      className: clsx(styles.drawer, {\n        [sharedStyles['with-motion-horizontal']]: !animationDisabled,\n        [styles['last-opened']]: lastOpenedDrawerId === activeDrawerId,\n        [styles.legacy]: isLegacyDrawer,\n        [testutilStyles['active-drawer']]: !toolsOnlyMode && activeDrawerId,\n        [testutilStyles.tools]: isToolsDrawer,\n        [styles['drawer-hidden']]: !activeDrawer,\n        [testutilStyles['drawer-closed']]: !activeDrawer\n      }),\n      ref: drawerRef,\n      onBlur: e => {\n        if (!e.relatedTarget || !e.currentTarget.contains(e.relatedTarget)) {\n          drawersFocusControl.loseFocus();\n        }\n      },\n      style: Object.assign({\n        blockSize: drawerHeight,\n        insetBlockStart: drawerTopOffset\n      }, !isMobile && !isLegacyDrawer && {\n        [customCssProps.drawerSize]: `${['entering', 'entered'].includes(state) ? size : 0}px`\n      }),\n      \"data-testid\": `awsui-app-layout-drawer-${activeDrawerId}`\n    }, !isMobile && (activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.resizable) && React.createElement(\"div\", {\n      className: styles['drawer-slider']\n    }, React.createElement(PanelResizeHandle, {\n      ref: drawersFocusControl.refs.slider,\n      position: \"side\",\n      className: testutilStyles['drawers-slider'],\n      ariaLabel: (_a = activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.ariaLabels) === null || _a === void 0 ? void 0 : _a.resizeHandle,\n      ariaValuenow: resizeProps.relativeSize,\n      onKeyDown: resizeProps.onKeyDown,\n      onPointerDown: resizeProps.onPointerDown\n    })), React.createElement(\"div\", {\n      className: clsx(styles['drawer-content-container'], sharedStyles['with-motion-horizontal'])\n    }, React.createElement(\"div\", {\n      className: clsx(styles['drawer-close-button'])\n    }, React.createElement(InternalButton, {\n      ariaLabel: computedAriaLabels.closeButton,\n      className: clsx({\n        [testutilStyles['active-drawer-close-button']]: !isToolsDrawer && activeDrawerId,\n        [testutilStyles['tools-close']]: isToolsDrawer\n      }),\n      formAction: \"none\",\n      iconName: isMobile ? 'close' : 'angle-right',\n      onClick: () => onActiveDrawerChange(null, {\n        initiatedByUserAction: true\n      }),\n      ref: drawersFocusControl.refs.close,\n      variant: \"icon\"\n    })), React.createElement(\"div\", {\n      className: clsx(styles['drawer-content'], activeDrawerId !== TOOLS_DRAWER_ID && styles['drawer-content-hidden']),\n      style: {\n        blockSize: drawerHeight\n      }\n    }, toolsContent), activeDrawerId !== TOOLS_DRAWER_ID && React.createElement(\"div\", {\n      className: styles['drawer-content'],\n      style: {\n        blockSize: drawerHeight\n      }\n    }, activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.content)));\n  });\n}\nexport const createWidgetizedAppLayoutDrawer = createWidgetizedComponent(AppLayoutDrawerImplementation);","map":{"version":3,"names":["React","useRef","Transition","clsx","InternalButton","PanelResizeHandle","customCssProps","createWidgetizedComponent","getLimitedValue","TOOLS_DRAWER_ID","getDrawerStyles","useResize","sharedStyles","testutilStyles","styles","AppLayoutDrawerImplementation","appLayoutInternals","activeDrawer","minDrawerSize","activeDrawerSize","maxDrawerSize","ariaLabels","drawers","drawersFocusControl","isMobile","placement","verticalOffsets","drawersOpenQueue","onActiveDrawerChange","onActiveDrawerResize","drawerRef","activeDrawerId","id","computedAriaLabels","closeButton","_a","toolsClose","content","_b","drawerName","tools","drawerTopOffset","drawerHeight","toolsOnlyMode","length","isToolsDrawer","toolsContent","_c","find","drawer","resizeProps","currentWidth","minWidth","maxWidth","panelRef","handleRef","refs","slider","onResize","size","isLegacyDrawer","undefined","lastOpenedDrawerId","animationDisabled","defaultActive","includes","createElement","nodeRef","in","appear","timeout","state","className","legacy","ref","onBlur","e","relatedTarget","currentTarget","contains","loseFocus","style","Object","assign","blockSize","insetBlockStart","drawerSize","resizable","position","ariaLabel","resizeHandle","ariaValuenow","relativeSize","onKeyDown","onPointerDown","formAction","iconName","onClick","initiatedByUserAction","close","variant","createWidgetizedAppLayoutDrawer"],"sources":["C:\\Users\\nicky\\Documents\\GitHub\\cse167\\final_project\\node_modules\\src\\app-layout\\visual-refresh-toolbar\\drawer\\local-drawer.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport { Transition } from 'react-transition-group';\nimport clsx from 'clsx';\n\nimport { InternalButton } from '../../../button/internal';\nimport PanelResizeHandle from '../../../internal/components/panel-resize-handle';\nimport customCssProps from '../../../internal/generated/custom-css-properties';\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { getLimitedValue } from '../../../split-panel/utils/size-utils';\nimport { TOOLS_DRAWER_ID } from '../../utils/use-drawers';\nimport { getDrawerStyles } from '../compute-layout';\nimport { AppLayoutInternals } from '../interfaces';\nimport { useResize } from './use-resize';\n\nimport sharedStyles from '../../resize/styles.css.js';\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n\ninterface AppLayoutDrawerImplementationProps {\n  appLayoutInternals: AppLayoutInternals;\n}\n\nexport function AppLayoutDrawerImplementation({ appLayoutInternals }: AppLayoutDrawerImplementationProps) {\n  const {\n    activeDrawer,\n    minDrawerSize,\n    activeDrawerSize,\n    maxDrawerSize,\n    ariaLabels,\n    drawers,\n    drawersFocusControl,\n    isMobile,\n    placement,\n    verticalOffsets,\n    drawersOpenQueue,\n    onActiveDrawerChange,\n    onActiveDrawerResize,\n  } = appLayoutInternals;\n  const drawerRef = useRef<HTMLDivElement>(null);\n  const activeDrawerId = activeDrawer?.id;\n\n  const computedAriaLabels = {\n    closeButton: activeDrawer ? activeDrawer.ariaLabels?.closeButton : ariaLabels?.toolsClose,\n    content: activeDrawer ? activeDrawer.ariaLabels?.drawerName : ariaLabels?.tools,\n  };\n\n  const { drawerTopOffset, drawerHeight } = getDrawerStyles(verticalOffsets, isMobile, placement);\n  const toolsOnlyMode = drawers.length === 1 && drawers[0].id === TOOLS_DRAWER_ID;\n  const isToolsDrawer = activeDrawer?.id === TOOLS_DRAWER_ID || toolsOnlyMode;\n  const toolsContent = drawers?.find(drawer => drawer.id === TOOLS_DRAWER_ID)?.content;\n  const resizeProps = useResize({\n    currentWidth: activeDrawerSize,\n    minWidth: minDrawerSize,\n    maxWidth: maxDrawerSize,\n    panelRef: drawerRef,\n    handleRef: drawersFocusControl.refs.slider,\n    onResize: size => onActiveDrawerResize({ id: activeDrawerId!, size }),\n  });\n  // temporary handle a situation when app-layout is old, but this component come as a widget\n  const isLegacyDrawer = drawersOpenQueue === undefined;\n  const size = getLimitedValue(minDrawerSize, activeDrawerSize, maxDrawerSize);\n  const lastOpenedDrawerId = drawersOpenQueue?.length ? drawersOpenQueue[0] : activeDrawerId;\n  const animationDisabled = activeDrawer?.defaultActive && !drawersOpenQueue.includes(activeDrawer.id);\n\n  return (\n    <Transition nodeRef={drawerRef} in={!!activeDrawer} appear={true} timeout={0}>\n      {state => (\n        <aside\n          id={activeDrawerId}\n          aria-hidden={!activeDrawer}\n          aria-label={computedAriaLabels.content}\n          className={clsx(styles.drawer, {\n            [sharedStyles['with-motion-horizontal']]: !animationDisabled,\n            [styles['last-opened']]: lastOpenedDrawerId === activeDrawerId,\n            [styles.legacy]: isLegacyDrawer,\n            [testutilStyles['active-drawer']]: !toolsOnlyMode && activeDrawerId,\n            [testutilStyles.tools]: isToolsDrawer,\n            [styles['drawer-hidden']]: !activeDrawer,\n            [testutilStyles['drawer-closed']]: !activeDrawer,\n          })}\n          ref={drawerRef}\n          onBlur={e => {\n            if (!e.relatedTarget || !e.currentTarget.contains(e.relatedTarget)) {\n              drawersFocusControl.loseFocus();\n            }\n          }}\n          style={{\n            blockSize: drawerHeight,\n            insetBlockStart: drawerTopOffset,\n            ...(!isMobile &&\n              !isLegacyDrawer && {\n                [customCssProps.drawerSize]: `${['entering', 'entered'].includes(state) ? size : 0}px`,\n              }),\n          }}\n          data-testid={`awsui-app-layout-drawer-${activeDrawerId}`}\n        >\n          {!isMobile && activeDrawer?.resizable && (\n            <div className={styles['drawer-slider']}>\n              <PanelResizeHandle\n                ref={drawersFocusControl.refs.slider}\n                position=\"side\"\n                className={testutilStyles['drawers-slider']}\n                ariaLabel={activeDrawer?.ariaLabels?.resizeHandle}\n                ariaValuenow={resizeProps.relativeSize}\n                onKeyDown={resizeProps.onKeyDown}\n                onPointerDown={resizeProps.onPointerDown}\n              />\n            </div>\n          )}\n          <div className={clsx(styles['drawer-content-container'], sharedStyles['with-motion-horizontal'])}>\n            <div className={clsx(styles['drawer-close-button'])}>\n              <InternalButton\n                ariaLabel={computedAriaLabels.closeButton}\n                className={clsx({\n                  [testutilStyles['active-drawer-close-button']]: !isToolsDrawer && activeDrawerId,\n                  [testutilStyles['tools-close']]: isToolsDrawer,\n                })}\n                formAction=\"none\"\n                iconName={isMobile ? 'close' : 'angle-right'}\n                onClick={() => onActiveDrawerChange(null, { initiatedByUserAction: true })}\n                ref={drawersFocusControl.refs.close}\n                variant=\"icon\"\n              />\n            </div>\n            <div\n              className={clsx(\n                styles['drawer-content'],\n                activeDrawerId !== TOOLS_DRAWER_ID && styles['drawer-content-hidden']\n              )}\n              style={{ blockSize: drawerHeight }}\n            >\n              {toolsContent}\n            </div>\n            {activeDrawerId !== TOOLS_DRAWER_ID && (\n              <div className={styles['drawer-content']} style={{ blockSize: drawerHeight }}>\n                {activeDrawer?.content}\n              </div>\n            )}\n          </div>\n        </aside>\n      )}\n    </Transition>\n  );\n}\n\nexport const createWidgetizedAppLayoutDrawer = createWidgetizedComponent(AppLayoutDrawerImplementation);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}