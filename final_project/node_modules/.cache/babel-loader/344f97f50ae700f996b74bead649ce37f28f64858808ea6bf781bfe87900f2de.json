{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nfunction RuntimeActionWrapper({\n  mountContent,\n  unmountContent,\n  context\n}) {\n  const ref = useRef(null);\n  useEffect(() => {\n    const container = ref.current;\n    mountContent(container, context);\n    return () => {\n      unmountContent(container);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(\"div\", {\n    ref: ref\n  });\n}\nfunction convertRuntimeAction(action, context) {\n  if (!action) {\n    return null;\n  }\n  return React.createElement(RuntimeActionWrapper, {\n    key: action.id + '-' + context.type,\n    context: context,\n    mountContent: action.mountContent,\n    unmountContent: action.unmountContent\n  });\n}\nexport function createUseDiscoveredAction(onActionRegistered) {\n  return function useDiscoveredAction(type) {\n    const [discoveredActions, setDiscoveredActions] = useState([]);\n    const headerRef = useRef(null);\n    const contentRef = useRef(null);\n    useEffect(() => {\n      return onActionRegistered(actions => {\n        setDiscoveredActions(actions.map(action => convertRuntimeAction(action, {\n          type,\n          headerRef,\n          contentRef\n        })));\n      });\n    }, [type]);\n    return {\n      discoveredActions,\n      headerRef,\n      contentRef\n    };\n  };\n}","map":{"version":3,"names":["React","useEffect","useRef","useState","RuntimeActionWrapper","mountContent","unmountContent","context","ref","container","current","createElement","convertRuntimeAction","action","key","id","type","createUseDiscoveredAction","onActionRegistered","useDiscoveredAction","discoveredActions","setDiscoveredActions","headerRef","contentRef","actions","map"],"sources":["C:\\Users\\nicky\\Documents\\GitHub\\cse167\\final_project\\node_modules\\src\\internal\\plugins\\helpers\\use-discovered-action.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { ActionButtonsController, ActionConfig, ActionContext } from '../controllers/action-buttons';\n\ninterface RuntimeActionWrapperProps {\n  context: ActionContext;\n  mountContent: ActionConfig['mountContent'];\n  unmountContent: ActionConfig['unmountContent'];\n}\n\nfunction RuntimeActionWrapper({ mountContent, unmountContent, context }: RuntimeActionWrapperProps) {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const container = ref.current!;\n    mountContent(container, context);\n    return () => {\n      unmountContent(container);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <div ref={ref}></div>;\n}\n\nfunction convertRuntimeAction(action: ActionConfig | null, context: ActionContext) {\n  if (!action) {\n    return null;\n  }\n  return (\n    <RuntimeActionWrapper\n      key={action.id + '-' + context.type}\n      context={context}\n      mountContent={action.mountContent}\n      unmountContent={action.unmountContent}\n    />\n  );\n}\n\nexport function createUseDiscoveredAction(onActionRegistered: ActionButtonsController['onActionRegistered']) {\n  return function useDiscoveredAction(type: string): {\n    discoveredActions: React.ReactNode[];\n    headerRef: React.Ref<HTMLDivElement>;\n    contentRef: React.Ref<HTMLDivElement>;\n  } {\n    const [discoveredActions, setDiscoveredActions] = useState<Array<React.ReactNode>>([]);\n    const headerRef = useRef<HTMLDivElement>(null);\n    const contentRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      return onActionRegistered(actions => {\n        setDiscoveredActions(actions.map(action => convertRuntimeAction(action, { type, headerRef, contentRef })));\n      });\n    }, [type]);\n\n    return { discoveredActions, headerRef, contentRef };\n  };\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAU1D,SAASC,oBAAoBA,CAAC;EAAEC,YAAY;EAAEC,cAAc;EAAEC;AAAO,CAA6B;EAChG,MAAMC,GAAG,GAAGN,MAAM,CAAiB,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAK;IACb,MAAMQ,SAAS,GAAGD,GAAG,CAACE,OAAQ;IAC9BL,YAAY,CAACI,SAAS,EAAEF,OAAO,CAAC;IAChC,OAAO,MAAK;MACVD,cAAc,CAACG,SAAS,CAAC;IAC3B,CAAC;IACD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOT,KAAA,CAAAW,aAAA;IAAKH,GAAG,EAAEA;EAAG,EAAQ;AAC9B;AAEA,SAASI,oBAAoBA,CAACC,MAA2B,EAAEN,OAAsB;EAC/E,IAAI,CAACM,MAAM,EAAE;IACX,OAAO,IAAI;;EAEb,OACEb,KAAA,CAAAW,aAAA,CAACP,oBAAoB;IACnBU,GAAG,EAAED,MAAM,CAACE,EAAE,GAAG,GAAG,GAAGR,OAAO,CAACS,IAAI;IACnCT,OAAO,EAAEA,OAAO;IAChBF,YAAY,EAAEQ,MAAM,CAACR,YAAY;IACjCC,cAAc,EAAEO,MAAM,CAACP;EAAc,EACrC;AAEN;AAEA,OAAM,SAAUW,yBAAyBA,CAACC,kBAAiE;EACzG,OAAO,SAASC,mBAAmBA,CAACH,IAAY;IAK9C,MAAM,CAACI,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlB,QAAQ,CAAyB,EAAE,CAAC;IACtF,MAAMmB,SAAS,GAAGpB,MAAM,CAAiB,IAAI,CAAC;IAC9C,MAAMqB,UAAU,GAAGrB,MAAM,CAAiB,IAAI,CAAC;IAE/CD,SAAS,CAAC,MAAK;MACb,OAAOiB,kBAAkB,CAACM,OAAO,IAAG;QAClCH,oBAAoB,CAACG,OAAO,CAACC,GAAG,CAACZ,MAAM,IAAID,oBAAoB,CAACC,MAAM,EAAE;UAAEG,IAAI;UAAEM,SAAS;UAAEC;QAAU,CAAE,CAAC,CAAC,CAAC;MAC5G,CAAC,CAAC;IACJ,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;IAEV,OAAO;MAAEI,iBAAiB;MAAEE,SAAS;MAAEC;IAAU,CAAE;EACrD,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}