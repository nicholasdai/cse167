{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { SplitPanelProvider } from '../../split-panel';\nimport { getDrawerStyles } from '../compute-layout';\nimport styles from './styles.css.js';\nexport function AppLayoutSplitPanelDrawerSideImplementation({\n  children,\n  appLayoutInternals,\n  splitPanelInternals\n}) {\n  const {\n    splitPanelControlId,\n    placement,\n    verticalOffsets,\n    isMobile,\n    splitPanelAnimationDisabled\n  } = appLayoutInternals;\n  const {\n    drawerTopOffset,\n    drawerHeight\n  } = getDrawerStyles(verticalOffsets, isMobile, placement);\n  return React.createElement(SplitPanelProvider, Object.assign({}, splitPanelInternals, {\n    animationDisabled: splitPanelAnimationDisabled\n  }), React.createElement(\"section\", {\n    id: splitPanelControlId,\n    className: styles['split-panel-side'],\n    style: {\n      blockSize: drawerHeight,\n      insetBlockStart: drawerTopOffset\n    }\n  }, children));\n}\nexport function AppLayoutSplitPanelDrawerBottomImplementation({\n  children,\n  splitPanelInternals,\n  appLayoutInternals\n}) {\n  return React.createElement(SplitPanelProvider, Object.assign({}, splitPanelInternals, {\n    animationDisabled: appLayoutInternals.splitPanelAnimationDisabled\n  }), children);\n}\nexport const createWidgetizedAppLayoutSplitPanelDrawerSide = createWidgetizedComponent(AppLayoutSplitPanelDrawerSideImplementation);\nexport const createWidgetizedAppLayoutSplitPanelDrawerBottom = createWidgetizedComponent(AppLayoutSplitPanelDrawerBottomImplementation);","map":{"version":3,"names":["React","createWidgetizedComponent","SplitPanelProvider","getDrawerStyles","styles","AppLayoutSplitPanelDrawerSideImplementation","children","appLayoutInternals","splitPanelInternals","splitPanelControlId","placement","verticalOffsets","isMobile","splitPanelAnimationDisabled","drawerTopOffset","drawerHeight","createElement","Object","assign","animationDisabled","id","className","style","blockSize","insetBlockStart","AppLayoutSplitPanelDrawerBottomImplementation","createWidgetizedAppLayoutSplitPanelDrawerSide","createWidgetizedAppLayoutSplitPanelDrawerBottom"],"sources":["C:\\Users\\nicky\\Documents\\GitHub\\cse167\\final_project\\node_modules\\src\\app-layout\\visual-refresh-toolbar\\split-panel\\index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { SplitPanelProvider, SplitPanelProviderProps } from '../../split-panel';\nimport { getDrawerStyles } from '../compute-layout';\nimport { AppLayoutInternals } from '../interfaces';\n\nimport styles from './styles.css.js';\n\ninterface AppLayoutSplitPanelDrawerSideImplementationProps {\n  appLayoutInternals: AppLayoutInternals;\n  splitPanelInternals: SplitPanelProviderProps;\n  children: React.ReactNode;\n}\n\nexport function AppLayoutSplitPanelDrawerSideImplementation({\n  children,\n  appLayoutInternals,\n  splitPanelInternals,\n}: AppLayoutSplitPanelDrawerSideImplementationProps) {\n  const { splitPanelControlId, placement, verticalOffsets, isMobile, splitPanelAnimationDisabled } = appLayoutInternals;\n  const { drawerTopOffset, drawerHeight } = getDrawerStyles(verticalOffsets, isMobile, placement);\n\n  return (\n    <SplitPanelProvider {...splitPanelInternals} animationDisabled={splitPanelAnimationDisabled}>\n      <section\n        id={splitPanelControlId}\n        className={styles['split-panel-side']}\n        style={{\n          blockSize: drawerHeight,\n          insetBlockStart: drawerTopOffset,\n        }}\n      >\n        {children}\n      </section>\n    </SplitPanelProvider>\n  );\n}\n\nexport interface AppLayoutSplitPanelDrawerBottomImplementationProps {\n  appLayoutInternals: AppLayoutInternals;\n  splitPanelInternals: SplitPanelProviderProps;\n  children: React.ReactNode;\n}\n\nexport function AppLayoutSplitPanelDrawerBottomImplementation({\n  children,\n  splitPanelInternals,\n  appLayoutInternals,\n}: AppLayoutSplitPanelDrawerBottomImplementationProps) {\n  return (\n    <SplitPanelProvider {...splitPanelInternals} animationDisabled={appLayoutInternals.splitPanelAnimationDisabled}>\n      {children}\n    </SplitPanelProvider>\n  );\n}\n\nexport const createWidgetizedAppLayoutSplitPanelDrawerSide = createWidgetizedComponent(\n  AppLayoutSplitPanelDrawerSideImplementation\n);\n\nexport const createWidgetizedAppLayoutSplitPanelDrawerBottom = createWidgetizedComponent(\n  AppLayoutSplitPanelDrawerBottomImplementation\n);\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,yBAAyB,QAAQ,2BAA2B;AACrE,SAASC,kBAAkB,QAAiC,mBAAmB;AAC/E,SAASC,eAAe,QAAQ,mBAAmB;AAGnD,OAAOC,MAAM,MAAM,iBAAiB;AAQpC,OAAM,SAAUC,2CAA2CA,CAAC;EAC1DC,QAAQ;EACRC,kBAAkB;EAClBC;AAAmB,CAC8B;EACjD,MAAM;IAAEC,mBAAmB;IAAEC,SAAS;IAAEC,eAAe;IAAEC,QAAQ;IAAEC;EAA2B,CAAE,GAAGN,kBAAkB;EACrH,MAAM;IAAEO,eAAe;IAAEC;EAAY,CAAE,GAAGZ,eAAe,CAACQ,eAAe,EAAEC,QAAQ,EAAEF,SAAS,CAAC;EAE/F,OACEV,KAAA,CAAAgB,aAAA,CAACd,kBAAkB,EAAAe,MAAA,CAAAC,MAAA,KAAKV,mBAAmB;IAAEW,iBAAiB,EAAEN;EAA2B,IACzFb,KAAA,CAAAgB,aAAA;IACEI,EAAE,EAAEX,mBAAmB;IACvBY,SAAS,EAAEjB,MAAM,CAAC,kBAAkB,CAAC;IACrCkB,KAAK,EAAE;MACLC,SAAS,EAAER,YAAY;MACvBS,eAAe,EAAEV;;EAClB,GAEAR,QAAQ,CACD,CACS;AAEzB;AAQA,OAAM,SAAUmB,6CAA6CA,CAAC;EAC5DnB,QAAQ;EACRE,mBAAmB;EACnBD;AAAkB,CACiC;EACnD,OACEP,KAAA,CAAAgB,aAAA,CAACd,kBAAkB,EAAAe,MAAA,CAAAC,MAAA,KAAKV,mBAAmB;IAAEW,iBAAiB,EAAEZ,kBAAkB,CAACM;EAA2B,IAC3GP,QAAQ,CACU;AAEzB;AAEA,OAAO,MAAMoB,6CAA6C,GAAGzB,yBAAyB,CACpFI,2CAA2C,CAC5C;AAED,OAAO,MAAMsB,+CAA+C,GAAG1B,yBAAyB,CACtFwB,6CAA6C,CAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}