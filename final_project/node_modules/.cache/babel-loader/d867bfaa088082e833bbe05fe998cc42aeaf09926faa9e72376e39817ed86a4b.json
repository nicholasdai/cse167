{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalSegmentedControl from './internal';\nexport default function SegmentedControl(props) {\n  var _a;\n  const baseComponentProps = useBaseComponent('SegmentedControl', {\n    props: {},\n    metadata: {\n      hasDisabledReasons: ((_a = props.options) !== null && _a !== void 0 ? _a : []).some(option => Boolean(option.disabledReason))\n    }\n  });\n  return React.createElement(InternalSegmentedControl, Object.assign({}, props, baseComponentProps));\n}\napplyDisplayName(SegmentedControl, 'SegmentedControl');","map":{"version":3,"names":["React","useBaseComponent","applyDisplayName","InternalSegmentedControl","SegmentedControl","props","baseComponentProps","metadata","hasDisabledReasons","_a","options","some","option","Boolean","disabledReason","createElement","Object","assign"],"sources":["C:\\Users\\nicky\\Documents\\GitHub\\cse167\\final_project\\node_modules\\src\\segmented-control\\index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { SegmentedControlProps } from './interfaces';\nimport InternalSegmentedControl from './internal';\n\nexport { SegmentedControlProps };\n\nexport default function SegmentedControl(props: SegmentedControlProps) {\n  const baseComponentProps = useBaseComponent('SegmentedControl', {\n    props: {},\n    metadata: {\n      hasDisabledReasons: (props.options ?? []).some(option => Boolean(option.disabledReason)),\n    },\n  });\n  return <InternalSegmentedControl {...props} {...baseComponentProps} />;\n}\n\napplyDisplayName(SegmentedControl, 'SegmentedControl');\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AAEvE,OAAOC,wBAAwB,MAAM,YAAY;AAIjD,eAAc,SAAUC,gBAAgBA,CAACC,KAA4B;;EACnE,MAAMC,kBAAkB,GAAGL,gBAAgB,CAAC,kBAAkB,EAAE;IAC9DI,KAAK,EAAE,EAAE;IACTE,QAAQ,EAAE;MACRC,kBAAkB,EAAE,CAAC,CAAAC,EAAA,GAAAJ,KAAK,CAACK,OAAO,cAAAD,EAAA,cAAAA,EAAA,GAAI,EAAE,EAAEE,IAAI,CAACC,MAAM,IAAIC,OAAO,CAACD,MAAM,CAACE,cAAc,CAAC;;GAE1F,CAAC;EACF,OAAOd,KAAA,CAAAe,aAAA,CAACZ,wBAAwB,EAAAa,MAAA,CAAAC,MAAA,KAAKZ,KAAK,EAAMC,kBAAkB,EAAI;AACxE;AAEAJ,gBAAgB,CAACE,gBAAgB,EAAE,kBAAkB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}