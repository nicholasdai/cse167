{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { copyAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../../internal/hooks/use-visual-mode';\nimport { useStickyCellStyles } from '../sticky-columns';\nimport { getTableColHeaderRoleProps } from '../table-role';\nimport { getStickyClassNames } from '../utils';\nimport tableStyles from '../styles.css.js';\nimport styles from './styles.css.js';\nexport function TableThElement(_a) {\n  var {\n      style,\n      sortingStatus,\n      sortingDisabled,\n      focusedComponent,\n      stuck,\n      sticky,\n      hidden,\n      stripedRows,\n      isSelection,\n      colIndex,\n      columnId,\n      stickyState,\n      cellRef,\n      tableRole,\n      children,\n      variant\n    } = _a,\n    props = __rest(_a, [\"style\", \"sortingStatus\", \"sortingDisabled\", \"focusedComponent\", \"stuck\", \"sticky\", \"hidden\", \"stripedRows\", \"isSelection\", \"colIndex\", \"columnId\", \"stickyState\", \"cellRef\", \"tableRole\", \"children\", \"variant\"]);\n  const isVisualRefresh = useVisualRefresh();\n  const stickyStyles = useStickyCellStyles({\n    stickyColumns: stickyState,\n    columnId,\n    getClassName: props => getStickyClassNames(styles, props)\n  });\n  const cellRefObject = useRef(null);\n  const mergedRef = useMergeRefs(stickyStyles.ref, cellRef, cellRefObject);\n  const {\n    tabIndex: cellTabIndex\n  } = useSingleTabStopNavigation(cellRefObject);\n  return React.createElement(\"th\", Object.assign({\n    \"data-focus-id\": `header-${String(columnId)}`,\n    className: clsx(styles['header-cell'], styles[`header-cell-variant-${variant}`], sticky && styles['header-cell-sticky'], stuck && styles['header-cell-stuck'], stripedRows && styles['has-striped-rows'], isVisualRefresh && styles['is-visual-refresh'], isSelection && clsx(tableStyles['selection-control'], tableStyles['selection-control-header']), {\n      [styles['header-cell-fake-focus']]: focusedComponent === `header-${String(columnId)}`,\n      [styles['header-cell-sortable']]: sortingStatus,\n      [styles['header-cell-sorted']]: sortingStatus === 'ascending' || sortingStatus === 'descending',\n      [styles['header-cell-disabled']]: sortingDisabled,\n      [styles['header-cell-ascending']]: sortingStatus === 'ascending',\n      [styles['header-cell-descending']]: sortingStatus === 'descending',\n      [styles['header-cell-hidden']]: hidden\n    }, stickyStyles.className),\n    style: Object.assign(Object.assign({}, style), stickyStyles.style),\n    ref: mergedRef\n  }, getTableColHeaderRoleProps({\n    tableRole,\n    sortingStatus,\n    colIndex\n  }), {\n    tabIndex: cellTabIndex === -1 ? undefined : cellTabIndex\n  }, copyAnalyticsMetadataAttribute(props)), children);\n}","map":{"version":3,"names":["React","useRef","clsx","copyAnalyticsMetadataAttribute","useSingleTabStopNavigation","useMergeRefs","useVisualRefresh","useStickyCellStyles","getTableColHeaderRoleProps","getStickyClassNames","tableStyles","styles","TableThElement","_a","style","sortingStatus","sortingDisabled","focusedComponent","stuck","sticky","hidden","stripedRows","isSelection","colIndex","columnId","stickyState","cellRef","tableRole","children","variant","props","__rest","isVisualRefresh","stickyStyles","stickyColumns","getClassName","cellRefObject","mergedRef","ref","tabIndex","cellTabIndex","createElement","Object","assign","String","className","undefined"],"sources":["C:\\Users\\nicky\\Documents\\GitHub\\cse167\\final_project\\node_modules\\src\\table\\header-cell\\th-element.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { copyAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../../internal/hooks/use-visual-mode';\nimport { TableProps } from '../interfaces';\nimport { StickyColumnsModel, useStickyCellStyles } from '../sticky-columns';\nimport { getTableColHeaderRoleProps, TableRole } from '../table-role';\nimport { getStickyClassNames } from '../utils';\nimport { SortingStatus } from './utils';\n\nimport tableStyles from '../styles.css.js';\nimport styles from './styles.css.js';\n\nexport interface TableThElementProps {\n  style?: React.CSSProperties;\n  sortingStatus?: SortingStatus;\n  sortingDisabled?: boolean;\n  focusedComponent?: null | string;\n  stuck?: boolean;\n  sticky?: boolean;\n  hidden?: boolean;\n  stripedRows?: boolean;\n  isSelection?: boolean;\n  colIndex: number;\n  columnId: PropertyKey;\n  stickyState: StickyColumnsModel;\n  cellRef?: React.RefCallback<HTMLElement> | null;\n  tableRole: TableRole;\n  children: React.ReactNode;\n  variant: TableProps.Variant;\n}\n\nexport function TableThElement({\n  style,\n  sortingStatus,\n  sortingDisabled,\n  focusedComponent,\n  stuck,\n  sticky,\n  hidden,\n  stripedRows,\n  isSelection,\n  colIndex,\n  columnId,\n  stickyState,\n  cellRef,\n  tableRole,\n  children,\n  variant,\n  ...props\n}: TableThElementProps) {\n  const isVisualRefresh = useVisualRefresh();\n\n  const stickyStyles = useStickyCellStyles({\n    stickyColumns: stickyState,\n    columnId,\n    getClassName: props => getStickyClassNames(styles, props),\n  });\n\n  const cellRefObject = useRef<HTMLTableCellElement>(null);\n  const mergedRef = useMergeRefs(stickyStyles.ref, cellRef, cellRefObject);\n  const { tabIndex: cellTabIndex } = useSingleTabStopNavigation(cellRefObject);\n\n  return (\n    <th\n      data-focus-id={`header-${String(columnId)}`}\n      className={clsx(\n        styles['header-cell'],\n        styles[`header-cell-variant-${variant}`],\n        sticky && styles['header-cell-sticky'],\n        stuck && styles['header-cell-stuck'],\n        stripedRows && styles['has-striped-rows'],\n        isVisualRefresh && styles['is-visual-refresh'],\n        isSelection && clsx(tableStyles['selection-control'], tableStyles['selection-control-header']),\n        {\n          [styles['header-cell-fake-focus']]: focusedComponent === `header-${String(columnId)}`,\n          [styles['header-cell-sortable']]: sortingStatus,\n          [styles['header-cell-sorted']]: sortingStatus === 'ascending' || sortingStatus === 'descending',\n          [styles['header-cell-disabled']]: sortingDisabled,\n          [styles['header-cell-ascending']]: sortingStatus === 'ascending',\n          [styles['header-cell-descending']]: sortingStatus === 'descending',\n          [styles['header-cell-hidden']]: hidden,\n        },\n        stickyStyles.className\n      )}\n      style={{ ...style, ...stickyStyles.style }}\n      ref={mergedRef}\n      {...getTableColHeaderRoleProps({ tableRole, sortingStatus, colIndex })}\n      tabIndex={cellTabIndex === -1 ? undefined : cellTabIndex}\n      {...copyAnalyticsMetadataAttribute(props)}\n    >\n      {children}\n    </th>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}