{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { useFormFieldContext } from '../contexts/form-field';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport ScreenreaderOnly from '../internal/components/screenreader-only';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport PlainList from '../select/parts/plain-list';\nimport VirtualList from '../select/parts/virtual-list';\nimport { useMultiselect } from './use-multiselect';\nimport styles from './styles.css.js';\nconst EmbeddedMultiselect = React.forwardRef((_a, externalRef) => {\n  var {\n      options,\n      filteringType,\n      ariaLabel,\n      selectedOptions,\n      deselectAriaLabel,\n      virtualScroll,\n      filteringText = ''\n    } = _a,\n    restProps = __rest(_a, [\"options\", \"filteringType\", \"ariaLabel\", \"selectedOptions\", \"deselectAriaLabel\", \"virtualScroll\", \"filteringText\"]);\n  const formFieldContext = useFormFieldContext(restProps);\n  const ariaLabelId = useUniqueId('multiselect-ariaLabel-');\n  const footerId = useUniqueId('multiselect-footer-');\n  const multiselectProps = useMultiselect(Object.assign({\n    options,\n    selectedOptions,\n    filteringType,\n    disabled: false,\n    deselectAriaLabel,\n    controlId: formFieldContext.controlId,\n    ariaLabelId,\n    footerId,\n    filteringValue: filteringText,\n    externalRef,\n    keepOpen: true,\n    embedded: true\n  }, restProps));\n  const ListComponent = virtualScroll ? VirtualList : PlainList;\n  const status = multiselectProps.dropdownStatus;\n  return React.createElement(\"div\", {\n    className: styles.embedded\n  }, React.createElement(ListComponent, {\n    menuProps: multiselectProps.getMenuProps(),\n    getOptionProps: multiselectProps.getOptionProps,\n    filteredOptions: multiselectProps.filteredOptions,\n    filteringValue: filteringText,\n    ref: multiselectProps.scrollToIndex,\n    hasDropdownStatus: status.content !== null,\n    checkboxes: true,\n    useInteractiveGroups: true,\n    screenReaderContent: multiselectProps.announcement,\n    highlightType: multiselectProps.highlightType\n  }), status.content && React.createElement(DropdownFooter, {\n    content: status.content,\n    id: footerId\n  }), React.createElement(ScreenreaderOnly, {\n    id: ariaLabelId\n  }, ariaLabel));\n});\nexport default EmbeddedMultiselect;","map":{"version":3,"names":["React","useFormFieldContext","DropdownFooter","ScreenreaderOnly","useUniqueId","PlainList","VirtualList","useMultiselect","styles","EmbeddedMultiselect","forwardRef","_a","externalRef","options","filteringType","ariaLabel","selectedOptions","deselectAriaLabel","virtualScroll","filteringText","restProps","__rest","formFieldContext","ariaLabelId","footerId","multiselectProps","Object","assign","disabled","controlId","filteringValue","keepOpen","embedded","ListComponent","status","dropdownStatus","createElement","className","menuProps","getMenuProps","getOptionProps","filteredOptions","ref","scrollToIndex","hasDropdownStatus","content","checkboxes","useInteractiveGroups","screenReaderContent","announcement","highlightType","id"],"sources":["C:\\Users\\nicky\\Documents\\GitHub\\cse167\\final_project\\node_modules\\src\\multiselect\\embedded.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { useFormFieldContext } from '../contexts/form-field';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport ScreenreaderOnly from '../internal/components/screenreader-only';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { SomeRequired } from '../internal/types';\nimport PlainList from '../select/parts/plain-list';\nimport VirtualList from '../select/parts/virtual-list';\nimport { MultiselectProps } from './interfaces';\nimport { useMultiselect } from './use-multiselect';\n\nimport styles from './styles.css.js';\n\nexport type EmbeddedMultiselectProps = SomeRequired<\n  Pick<\n    MultiselectProps,\n    | 'options'\n    | 'selectedOptions'\n    | 'ariaLabel'\n    | 'filteringType'\n    | 'deselectAriaLabel'\n    | 'virtualScroll'\n    | 'statusType'\n    | 'controlId'\n    | 'onChange'\n    | 'onLoadItems'\n    | 'loadingText'\n    | 'finishedText'\n    | 'errorText'\n    | 'recoveryText'\n    | 'empty'\n    | 'noMatch'\n  >,\n  'options' | 'selectedOptions' | 'filteringType' | 'statusType'\n> & { filteringText?: string };\n\nconst EmbeddedMultiselect = React.forwardRef(\n  (\n    {\n      options,\n      filteringType,\n      ariaLabel,\n      selectedOptions,\n      deselectAriaLabel,\n      virtualScroll,\n      filteringText = '',\n      ...restProps\n    }: EmbeddedMultiselectProps,\n    externalRef: React.Ref<MultiselectProps.Ref>\n  ) => {\n    const formFieldContext = useFormFieldContext(restProps);\n    const ariaLabelId = useUniqueId('multiselect-ariaLabel-');\n    const footerId = useUniqueId('multiselect-footer-');\n    const multiselectProps = useMultiselect({\n      options,\n      selectedOptions,\n      filteringType,\n      disabled: false,\n      deselectAriaLabel,\n      controlId: formFieldContext.controlId,\n      ariaLabelId,\n      footerId,\n      filteringValue: filteringText,\n      externalRef,\n      keepOpen: true,\n      embedded: true,\n      ...restProps,\n    });\n\n    const ListComponent = virtualScroll ? VirtualList : PlainList;\n    const status = multiselectProps.dropdownStatus;\n\n    return (\n      <div className={styles.embedded}>\n        <ListComponent\n          menuProps={multiselectProps.getMenuProps()}\n          getOptionProps={multiselectProps.getOptionProps}\n          filteredOptions={multiselectProps.filteredOptions}\n          filteringValue={filteringText}\n          ref={multiselectProps.scrollToIndex}\n          hasDropdownStatus={status.content !== null}\n          checkboxes={true}\n          useInteractiveGroups={true}\n          screenReaderContent={multiselectProps.announcement}\n          highlightType={multiselectProps.highlightType}\n        />\n\n        {status.content && <DropdownFooter content={status.content} id={footerId} />}\n\n        <ScreenreaderOnly id={ariaLabelId}>{ariaLabel}</ScreenreaderOnly>\n      </div>\n    );\n  }\n);\n\nexport default EmbeddedMultiselect;\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,mBAAmB,QAAQ,wBAAwB;AAC5D,OAAOC,cAAc,MAAM,wCAAwC;AACnE,OAAOC,gBAAgB,MAAM,0CAA0C;AACvE,SAASC,WAAW,QAAQ,iCAAiC;AAE7D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,WAAW,MAAM,8BAA8B;AAEtD,SAASC,cAAc,QAAQ,mBAAmB;AAElD,OAAOC,MAAM,MAAM,iBAAiB;AAyBpC,MAAMC,mBAAmB,GAAGT,KAAK,CAACU,UAAU,CAC1C,CACEC,EAS2B,EAC3BC,WAA4C,KAC1C;MAXF;MACEC,OAAO;MACPC,aAAa;MACbC,SAAS;MACTC,eAAe;MACfC,iBAAiB;MACjBC,aAAa;MACbC,aAAa,GAAG;IAAE,IAAAR,EAEO;IADtBS,SAAS,GAAAC,MAAA,CAAAV,EAAA,EARd,mHASC,CADa;EAId,MAAMW,gBAAgB,GAAGrB,mBAAmB,CAACmB,SAAS,CAAC;EACvD,MAAMG,WAAW,GAAGnB,WAAW,CAAC,wBAAwB,CAAC;EACzD,MAAMoB,QAAQ,GAAGpB,WAAW,CAAC,qBAAqB,CAAC;EACnD,MAAMqB,gBAAgB,GAAGlB,cAAc,CAAAmB,MAAA,CAAAC,MAAA;IACrCd,OAAO;IACPG,eAAe;IACfF,aAAa;IACbc,QAAQ,EAAE,KAAK;IACfX,iBAAiB;IACjBY,SAAS,EAAEP,gBAAgB,CAACO,SAAS;IACrCN,WAAW;IACXC,QAAQ;IACRM,cAAc,EAAEX,aAAa;IAC7BP,WAAW;IACXmB,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE;EAAI,GACXZ,SAAS,EACZ;EAEF,MAAMa,aAAa,GAAGf,aAAa,GAAGZ,WAAW,GAAGD,SAAS;EAC7D,MAAM6B,MAAM,GAAGT,gBAAgB,CAACU,cAAc;EAE9C,OACEnC,KAAA,CAAAoC,aAAA;IAAKC,SAAS,EAAE7B,MAAM,CAACwB;EAAQ,GAC7BhC,KAAA,CAAAoC,aAAA,CAACH,aAAa;IACZK,SAAS,EAAEb,gBAAgB,CAACc,YAAY,EAAE;IAC1CC,cAAc,EAAEf,gBAAgB,CAACe,cAAc;IAC/CC,eAAe,EAAEhB,gBAAgB,CAACgB,eAAe;IACjDX,cAAc,EAAEX,aAAa;IAC7BuB,GAAG,EAAEjB,gBAAgB,CAACkB,aAAa;IACnCC,iBAAiB,EAAEV,MAAM,CAACW,OAAO,KAAK,IAAI;IAC1CC,UAAU,EAAE,IAAI;IAChBC,oBAAoB,EAAE,IAAI;IAC1BC,mBAAmB,EAAEvB,gBAAgB,CAACwB,YAAY;IAClDC,aAAa,EAAEzB,gBAAgB,CAACyB;EAAa,EAC7C,EAEDhB,MAAM,CAACW,OAAO,IAAI7C,KAAA,CAAAoC,aAAA,CAAClC,cAAc;IAAC2C,OAAO,EAAEX,MAAM,CAACW,OAAO;IAAEM,EAAE,EAAE3B;EAAQ,EAAI,EAE5ExB,KAAA,CAAAoC,aAAA,CAACjC,gBAAgB;IAACgD,EAAE,EAAE5B;EAAW,GAAGR,SAAS,CAAoB,CAC7D;AAEV,CAAC,CACF;AAED,eAAeN,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}